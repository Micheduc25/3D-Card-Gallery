/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function NewSceneModel({
  frontImage = "/images/carousel/1.jpg",
  backImage = "/images/carousel/2.jpg",
  podiumColor,
  wallColor,
  slideChange,
}) {
  const group = useRef();

  const { nodes, materials } = useGLTF("/models/Carte collectionable.gltf");

  const image1Mesh = useRef();
  const image2Mesh = useRef();

  const [texture1, texture2] = useTexture([frontImage, backImage]);

  const [animation, setAnimation] = useState({
    active: false,
    direction: "next",
  });

  useFrame((state) => {
    // // TWEEN.update(state.clock.elapsedTime);
    if (animation.active) {
      // state.camera.lookAt(group.current.position);
      if (animation.direction == "next") {
        group.current.rotation.y += 0.1;
        group.current.position.x -= 1.3;
        // group.current.position.y += 0.05;
      } else {
        group.current.rotation.y += 0.1;
        group.current.position.x += 1.3;
        // group.current.position.y += 0.05;
        // group.current.position.x -= 0.1;
      }
    } else {
      group.current.rotation.y += 0.005;
      group.current.position.x = 0;
    }
  });

  useEffect(() => {
    image1Mesh.current.material.map = texture1;
    image1Mesh.current.material.map.flipY = true;

    image2Mesh.current.material.map = texture2;
    image2Mesh.current.material.map.flipY = true;
  }, [image1Mesh, image2Mesh]);

  useEffect(() => {
    setAnimation({ ...slideChange });
  }, [slideChange]);

  return (
    <group ref={group} dispose={null} position={[0, -1.5, 0]}>
      <mesh
        geometry={nodes.Support.geometry}
        material={materials.Verre}
        position={[0, 0.5, 0]}
        castShadow={true}
      >
        <group position={[0, 1.6, -0.06]}>
          <mesh
            geometry={nodes.Plane001.geometry}
            material={materials.Image2}
            ref={image2Mesh}
            castShadow={true}
          />
          <mesh
            geometry={nodes.Plane001_1.geometry}
            material={materials["Matériau carte"]}
          />
        </group>
        <group position={[0, 1.6, 0.01]}>
          <mesh
            geometry={nodes.Plane003.geometry}
            material={materials.Image1}
            ref={image1Mesh}
          />
          <mesh
            geometry={nodes.Plane003_1.geometry}
            material={materials["Matériau carte"]}
            castShadow={true}
          />
        </group>
      </mesh>
      <mesh
        geometry={nodes.Podium.geometry}
        material={materials.Podium}
        position={[0, 0.14, 0]}
        material-color={podiumColor}
        receiveShadow={true}
      />
      <group position={[0, 0.14, 0]}>
        <mesh
          geometry={nodes.Cylinder002.geometry}
          material={materials["Sol et murs"]}
          material-color={wallColor}
          receiveShadow={true}
        />
        <mesh
          geometry={nodes.Cylinder002_1.geometry}
          material={materials["Blanc projecteurs"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Carte collectionable.gltf");
